{"version":3,"sources":["helpers/paths.ts","hooks/useHttp.tsx","helpers/requests.ts","components/CustomSnackbar.tsx","store/UserProvider.ts","img/logo.png","pages/Login.tsx","pages/WaitingPage.tsx","components/TaskItem.tsx","img/airport.jpg","components/Map.tsx","pages/HomeSnowblowerPage.tsx","pages/HomeFieldEngineerPage.tsx","hooks/useRoutes.tsx","App.tsx","index.tsx","store/UserMob.ts"],"names":["routes","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","method","body","token","a","headers","JSON","stringify","fetch","process","response","data","json","ok","Error","message","clearError","requests","patientId","Alert","props","elevation","variant","CustomSnackbar","open","kind","handleClose","Snackbar","autoHideDuration","onClose","severity","UserContext","createContext","UserProvider","Provider","useStyles","makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","padding","logo","marginBottom","form","width","submit","margin","color","Login","classes","doctor","useContext","saveUser","setSaveUser","login","password","authCredentials","setAuthCredentials","history","useHistory","handleChange","event","currentTarget","name","value","handleSubmit","preventDefault","btoa","push","Container","component","maxWidth","CssBaseline","Paper","className","src","alt","height","Typography","align","noValidate","onSubmit","TextField","required","fullWidth","id","label","autoComplete","autoFocus","onChange","type","FormControlLabel","control","Checkbox","checked","Button","disabled","Boolean","WaitingPage","Grid","container","direction","justify","style","item","CircularProgress","root","text","marginRight","TaskItem","task","xs","runwayUnit","icing","snowLevel","Map","styled","div","orientation","useMediaPredicate","defaultScale","defaultPositionX","defaultPositionY","zoomIn","zoomOut","resetTransform","Fragment","airport","transform","tasks","maxHeight","overflow","map","buttonGroup","button","list","HomeSnowblowerPage","user","setTasks","openSnack","setOpenSnack","useEffect","then","console","log","List","index","ListItem","onClick","quadrant","radio","HomeFieldEngineerPage","isSnowPanel","setIsSnowPanel","RadioGroup","row","aria-label","defaultValue","Radio","labelPlacement","createMuiTheme","palette","primary","main","secondary","success","App","localStorage","getItem","catch","resetUser","useObserver","exact","path","to","isAuth","useRoutes","ThemeProvider","this","surname","patronymic","observable","action","save","setItem","clear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.adf42d61.chunk.js","sourcesContent":["export const routes = {\r\n    toHomeSnowblower: '/home/snowblower',\r\n    toHomeFieldEngineer: '/home/fieldEngineer',\r\n    toLogin: '/login',\r\n    toWaitingPage: '/waiting',\r\n}\r\n","import {useCallback, useState} from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false)\r\n    const [error, setError] = useState(null)\r\n\r\n    const request = useCallback( async (url, method, body, token) => {\r\n        setLoading(true)\r\n        try{\r\n            let headers:any = {}\r\n            if(body) {\r\n                body = JSON.stringify(body)\r\n                headers['Content-Type'] = 'application/json;charset=utf-8'\r\n            }\r\n            if(token)\r\n                headers['Authorization'] = `Basic ${token}`\r\n            const response = await fetch(`${process.env.REACT_APP_BASE_DEV_URL}${url}`, {method, body, headers})\r\n            let data = null\r\n            if (method === 'POST' || method === 'GET')\r\n                data = await response.json()\r\n\r\n            if(!response.ok) throw new Error(data?  data.message:'Something wrong')\r\n\r\n            setLoading(false)\r\n            return data\r\n        } catch (e) {\r\n            setLoading(false)\r\n            setError(e.message)\r\n            throw e\r\n        }\r\n    },[])\r\n\r\n    const clearError = () => setError(null)\r\n\r\n    return {loading, request, error, clearError }\r\n}\r\n","export const requests = {\r\n    login: {\r\n        url: 'users/user/',\r\n        method: 'GET'\r\n    },\r\n    getListOfTechnics: {\r\n        url: 'technics',\r\n        method: 'GET'\r\n    },\r\n    getAllRunways: {\r\n        url: 'runways',\r\n        method: 'GET'\r\n    },\r\n    getAllTasks: {\r\n        url: 'tasks',\r\n        method: 'GET'\r\n    },\r\n    getTasksByUserId: {\r\n        url:(patientId: number) => `tasks/units/${patientId}`,\r\n        method: 'GET'\r\n    },\r\n    createNewTask: {\r\n        url: 'tasks/task',\r\n        method: 'POST'\r\n    },\r\n    updateRunwayUnit: {\r\n        url: 'runways/units',\r\n        method: 'PUT'\r\n    },\r\n}\r\n","import React from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\nimport MuiAlert, { AlertProps } from '@material-ui/lab/Alert';\r\n\r\nfunction Alert(props: AlertProps) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n}\r\n\r\nexport interface CustomSnackbarInterface {\r\n    open: boolean,\r\n    handleClose: Function,\r\n    message: string,\r\n    kind: \"success\" | \"error\" | \"warning\" | \"info\"\r\n}\r\n\r\nexport default function CustomSnackbar({open, kind, handleClose, message}:CustomSnackbarInterface) {\r\n    return (\r\n        <Snackbar open={open} autoHideDuration={6000} onClose={() => handleClose()}>\r\n            <Alert onClose={() => handleClose()} severity={kind}>\r\n                {message}\r\n            </Alert>\r\n        </Snackbar>\r\n    );\r\n}\r\n","import {createContext} from \"react\";\r\nimport UserMob from \"./UserMob\";\r\n\r\nexport const UserContext = createContext<UserMob>({} as UserMob)\r\nexport const UserProvider = UserContext.Provider\r\n","export default __webpack_public_path__ + \"static/media/logo.6f1dc9fc.png\";","import React, {SyntheticEvent, useContext, useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {routes} from \"../helpers/paths\";\r\nimport {useHttp} from \"../hooks/useHttp\";\r\nimport {requests} from \"../helpers/requests\";\r\nimport CustomSnackbar from \"../components/CustomSnackbar\";\r\nimport {UserContext} from \"../store/UserProvider\";\r\nimport {UserResponseInterface} from \"../interfaces/UserInterface\";\r\nimport {Paper} from \"@material-ui/core\";\r\nimport logo from \"../img/logo.png\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(4),\r\n    },\r\n    logo: {\r\n        marginBottom: theme.spacing(4)\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n        color:'#fff'\r\n    },\r\n}));\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n    const doctor = useContext(UserContext)\r\n    const {clearError, request, loading, error} = useHttp()\r\n    const [saveUser, setSaveUser] = useState<boolean>(false)\r\n    const [authCredentials, setAuthCredentials] = useState<{login: string, password: string}>({login: '', password: ''})\r\n    const history = useHistory()\r\n\r\n    const handleChange = (event: SyntheticEvent) => {\r\n        // @ts-ignore\r\n        setAuthCredentials({...authCredentials, [event.currentTarget.name]: event.currentTarget.value})\r\n    }\r\n\r\n    const handleSubmit = async (event: React.FormEvent<EventTarget>) => {\r\n        event.preventDefault()\r\n        try {\r\n            const data = await request(requests.login.url, requests.login.method,\r\n                null, btoa(`${authCredentials.login}:${authCredentials.password}`))\r\n            doctor.login(data as UserResponseInterface,\r\n                btoa(`${authCredentials.login}:${authCredentials.password}`), saveUser)\r\n            history.push(routes.toHomeSnowblower)\r\n        } catch (e) {}\r\n    }\r\n\r\n    const handleCheck = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setSaveUser(event.currentTarget.checked)\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <img src={logo} alt=\"logo\" width=\"80%\" height=\"80%\" className={classes.logo}/>\r\n                <Typography variant=\"h5\" align=\"center\">ДОБРО ПОЖАЛОВАТЬ!</Typography>\r\n                <form\r\n                    className={classes.form}\r\n                    noValidate\r\n                    onSubmit={handleSubmit}\r\n                >\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"login\"\r\n                        label=\"Логин\"\r\n                        name=\"login\"\r\n                        autoComplete=\"login\"\r\n                        autoFocus\r\n                        onChange={handleChange}\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Пароль\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        onChange={handleChange}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={saveUser}\r\n                                onChange={handleCheck}\r\n                                color=\"primary\"\r\n                            />\r\n                        }\r\n                        label=\"Запомнить меня\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        disabled={loading}\r\n                        className={classes.submit}\r\n                    >\r\n                        Войти\r\n                    </Button>\r\n                </form>\r\n            </Paper>\r\n            <CustomSnackbar\r\n                open={Boolean(error)}\r\n                handleClose={clearError}\r\n                message={\"Неверный логин или пароль!\"}\r\n                kind={\"error\"}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n","import Container from \"@material-ui/core/Container\";\r\nimport React from \"react\";\r\nimport {CircularProgress, Typography, Grid} from \"@material-ui/core\";\r\n\r\n\r\nexport const WaitingPage = () =>(\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n        <Grid container\r\n              direction=\"row\"\r\n              justify=\"center\"\r\n              alignItems=\"center\"\r\n              style={{marginTop: '2rem'}}\r\n              spacing={2}\r\n        >\r\n            <Grid item>\r\n                <CircularProgress />\r\n            </Grid>\r\n            <Grid item>\r\n                <Typography variant=\"body1\" component=\"p\" color={'textSecondary'}>\r\n                    Определяем где вы были в последний раз...\r\n                </Typography>\r\n            </Grid>\r\n        </Grid>\r\n    </Container>\r\n)\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Grid, Paper} from \"@material-ui/core\";\r\nimport {TaskInterface} from \"../interfaces/TaskInterface\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        margin: theme.spacing(1),\r\n        width: '100%',\r\n        height: theme.spacing(4)\r\n    },\r\n    text: {\r\n        marginRight: theme.spacing(1),\r\n    }\r\n}));\r\n\r\nexport const TaskItem = ({task} : {task: TaskInterface}) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Paper elevation={3} className={classes.root}>\r\n            <Grid container direction='row' justify=\"center\" className={classes.root}>\r\n                <Grid item xs={4} className={classes.text}><span>Квадрат - {task.runwayUnit.name}</span></Grid>\r\n                <Grid item xs={5} className={classes.text}><span>Обледенение - {task.runwayUnit.icing}</span></Grid>\r\n                <Grid item xs={2} className={classes.text}><span>Снег - {task.runwayUnit.snowLevel}</span></Grid>\r\n            </Grid>\r\n        </Paper>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/airport.47805ce5.jpg\";","// @ts-nocheck\r\nimport React, {useContext} from 'react';\r\nimport {TaskInterface} from \"../interfaces/TaskInterface\";\r\nimport {UserContext} from \"../store/UserProvider\";\r\nimport {useHttp} from \"../hooks/useHttp\";\r\nimport { TransformWrapper, TransformComponent } from \"react-zoom-pan-pinch\";\r\nimport styled from \"styled-components\";\r\nimport airport from \"../img/airport.jpg\"\r\nimport { useMediaPredicate } from \"react-media-hook\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  flex-direction: row;\r\n  flex-wrap: wrap;\r\n  align-content: flex-start;\r\n`;\r\nconst Toolbox = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  width: 100%;\r\n  max-width: calc(100vw - 60px);\r\n  margin-bottom: 10px;\r\n  button {\r\n    margin-left: 10px;\r\n    width: 2em;\r\n  }\r\n`;\r\n\r\nexport const Map = ({task} : {task: TaskInterface}) => {\r\n\r\n    const orientation = useMediaPredicate(\"(min-width: 700px)\");\r\n\r\n    return (\r\n        <TransformWrapper\r\n            defaultScale={1}\r\n            defaultPositionX={0}\r\n            defaultPositionY={0}\r\n        >\r\n            {({ zoomIn, zoomOut, resetTransform }) => (\r\n                <React.Fragment>\r\n                    <TransformComponent>\r\n                        {orientation ?\r\n                            <img\r\n                                src={airport}\r\n                                alt=\"airport\"\r\n                                width='50%'\r\n                                height='50%'\r\n                                style={{transform: 'rotate(270deg)'}}\r\n                            />\r\n                            :\r\n                            <img\r\n                                src={airport}\r\n                                alt=\"airport\"\r\n                                width='100%'\r\n                                height='100%'\r\n                            />\r\n                        }\r\n                        <img\r\n                            src={airport}\r\n                            alt=\"airport\"\r\n                            width='100%'\r\n                            height='100%'\r\n                            style={{transform: orientation ? 'rotate(270deg)' : 'none'}}\r\n                        />\r\n                        <img\r\n                            src={airport}\r\n                            alt=\"airport\"\r\n                            width='100%'\r\n                            height='100%'\r\n                            style={{transform: orientation ? 'rotate(270deg)' : 'none'}}\r\n                        />\r\n                    </TransformComponent>\r\n                </React.Fragment>\r\n            )}\r\n        </TransformWrapper>\r\n    );\r\n}\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useHttp} from \"../hooks/useHttp\";\r\nimport {requests} from \"../helpers/requests\";\r\nimport {UserContext} from \"../store/UserProvider\";\r\nimport {Button, Grid, List, ListItem, Paper} from \"@material-ui/core\";\r\nimport {TaskInterface} from \"../interfaces/TaskInterface\";\r\nimport {TaskItem} from \"../components/TaskItem\";\r\nimport {Map} from \"../components/Map\";\r\nimport CustomSnackbar from \"../components/CustomSnackbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '98vh',\r\n        padding: theme.spacing(1.5),\r\n        width: '100%',\r\n        '@media screen and (min-device-width: 700px)': {\r\n            width: '100%'\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: theme.spacing(1),\r\n        height: '10%',\r\n        padding: theme.spacing(0.5),\r\n        maxHeight: '10%',\r\n        overflow: 'auto'\r\n    },\r\n    map: {\r\n        marginTop: theme.spacing(1),\r\n        height: '70%',\r\n        overflow: 'hidden'\r\n    },\r\n    buttonGroup: {\r\n        marginTop: theme.spacing(1),\r\n        height: '20%',\r\n        padding: theme.spacing(2)\r\n    },\r\n    button: {\r\n        width: '100%',\r\n        height: '100%'\r\n    },\r\n    list: {\r\n        margin: 0,\r\n        padding: 0\r\n    }\r\n}));\r\n\r\nexport default function HomeSnowblowerPage() {\r\n    const classes = useStyles();\r\n    const user = useContext(UserContext)\r\n    const {request} = useHttp()\r\n    const [tasks, setTasks] = useState([] as TaskInterface[])\r\n    const [openSnack, setOpenSnack] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        request(requests.getTasksByUserId.url(user.user.id), requests.getTasksByUserId.method, null, user.user.token)\r\n            .then(data => {\r\n                console.log(data)\r\n                setTasks(data as TaskInterface[])\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"lg\" className={classes.root}>\r\n            <Paper elevation={3} className={classes.tasks}>\r\n                <List className={classes.list}>\r\n                    {tasks.map((item, index) => (\r\n                        <ListItem className={classes.list}><TaskItem task={item} key={index} /></ListItem>\r\n                    ))}\r\n                </List>\r\n            </Paper>\r\n            <Paper elevation={3} className={classes.map}>\r\n                <Map task={tasks[0]}/>\r\n            </Paper>\r\n            <Paper elevation={3} className={classes.buttonGroup}>\r\n                <Grid container spacing={1}>\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            variant={'outlined'}\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            onClick={() => setOpenSnack(true)}\r\n                        >\r\n                            НАЧАЛ РАБОТУ\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            variant={'outlined'}\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            onClick={() => setOpenSnack(true)}\r\n                        >\r\n                            ЗАКОНЧИЛ РАБОТУ\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            variant={'outlined'}\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            onClick={() => setOpenSnack(true)}\r\n                        >\r\n                            ВОЗВРАЩАЮСЬ НА БАЗУ\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            variant={'outlined'}\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                            onClick={() => setOpenSnack(true)}\r\n                        >\r\n                            ТЕХНИЧЕСКИЙ ПЕРЕРЫВ\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n            <CustomSnackbar\r\n                open={openSnack}\r\n                handleClose={() => setOpenSnack(false)}\r\n                message={\"Информация передана диспетчеру\"}\r\n                kind={\"info\"}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useHttp} from \"../hooks/useHttp\";\r\nimport {requests} from \"../helpers/requests\";\r\nimport {UserContext} from \"../store/UserProvider\";\r\nimport {Button, FormControlLabel, Grid, Paper, Radio, RadioGroup, Typography} from \"@material-ui/core\";\r\nimport {TaskInterface} from \"../interfaces/TaskInterface\";\r\nimport {Map} from \"../components/Map\";\r\nimport CustomSnackbar from \"../components/CustomSnackbar\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        height: '98vh',\r\n        padding: theme.spacing(1.5),\r\n        width: '100%',\r\n        '@media screen and (min-device-width: 700px)': {\r\n            width: '100%'\r\n        }\r\n    },\r\n    quadrant: {\r\n        marginTop: theme.spacing(1),\r\n        height: theme.spacing(4),\r\n        padding: theme.spacing(0.8),\r\n    },\r\n    map: {\r\n        marginTop: theme.spacing(1),\r\n        height: '70%',\r\n        overflow: 'hidden'\r\n    },\r\n    buttonGroup: {\r\n        marginTop: theme.spacing(1),\r\n        marginBottom: theme.spacing(1),\r\n        height: '20%',\r\n        padding: theme.spacing(2)\r\n    },\r\n    list: {\r\n        margin: 0,\r\n        padding: 0\r\n    },\r\n    text: {\r\n        marginTop: theme.spacing(2)\r\n    },\r\n    radio: {\r\n        margin: '0px auto'\r\n    }\r\n}));\r\n\r\nexport default function HomeFieldEngineerPage() {\r\n    const classes = useStyles();\r\n    const user = useContext(UserContext)\r\n    const {request} = useHttp()\r\n    const [tasks, setTasks] = useState([] as TaskInterface[])\r\n    const [openSnack, setOpenSnack] = useState<boolean>(false)\r\n    const [isSnowPanel, setIsSnowPanel] = useState<boolean>(false)\r\n\r\n    useEffect(() => {\r\n        request(requests.getTasksByUserId.url(user.user.id), requests.getTasksByUserId.method, null, user.user.token)\r\n            .then(data => {\r\n                console.log(data)\r\n                setTasks(data as TaskInterface[])\r\n            })\r\n    },[])\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"lg\" className={classes.root}>\r\n            <Paper elevation={3} className={classes.map}>\r\n                <Map task={tasks[0]}/>\r\n            </Paper>\r\n            <Paper elevation={3} className={classes.quadrant}>\r\n                Квадрат - 24\r\n            </Paper>\r\n            <Paper elevation={3} className={classes.buttonGroup}>\r\n                <Grid container direction='row' justify=\"center\">\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            variant={'outlined'}\r\n                            color=\"primary\"\r\n                            fullWidth\r\n                            onClick={() => setIsSnowPanel(false)}\r\n                        >\r\n                            Обледенение\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                        <Button\r\n                            variant={'outlined'}\r\n                            color=\"primary\"\r\n                            fullWidth\r\n                            onClick={() => setIsSnowPanel(true)}\r\n                        >\r\n                            Заснеженность\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n                {isSnowPanel ?\r\n                    <>\r\n                        <Typography align=\"center\" className={classes.text}>Уровень снега</Typography>\r\n                        <RadioGroup row aria-label=\"position\" name=\"position\" className={classes.radio} defaultValue=\"1\">\r\n                            <FormControlLabel\r\n                                value=\"1\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"1\"\r\n                                labelPlacement=\"start\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"2\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"2\"\r\n                                labelPlacement=\"start\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"3\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"3\"\r\n                                labelPlacement=\"start\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"4\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"4\"\r\n                                labelPlacement=\"start\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"5\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"5\"\r\n                                labelPlacement=\"start\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Typography align=\"center\" className={classes.text}>Степень обледенения</Typography>\r\n                        <RadioGroup row aria-label=\"position\" name=\"position\" className={classes.radio} defaultValue=\"1\">\r\n                            <FormControlLabel\r\n                                value=\"1\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"1\"\r\n                                labelPlacement=\"start\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"2\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"2\"\r\n                                labelPlacement=\"start\"\r\n                            />\r\n                            <FormControlLabel\r\n                                value=\"3\"\r\n                                control={<Radio color=\"primary\" />}\r\n                                label=\"3\"\r\n                                labelPlacement=\"start\"\r\n                            />\r\n                        </RadioGroup>\r\n                    </>\r\n                }\r\n\r\n\r\n            </Paper>\r\n            <Button\r\n                variant={'outlined'}\r\n                color=\"primary\"\r\n                fullWidth\r\n                onClick={() => setOpenSnack(true)}\r\n            >\r\n                ОТПРАВИТЬ\r\n            </Button>\r\n            <CustomSnackbar\r\n                open={openSnack}\r\n                handleClose={() => setOpenSnack(false)}\r\n                message={\"Информация передана диспетчеру\"}\r\n                kind={\"info\"}\r\n            />\r\n        </Container>\r\n    );\r\n}\r\n","import {useContext, useEffect} from \"react\";\r\nimport {useObserver} from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Switch, Route, Redirect } from \"react-router-dom\";\r\nimport {routes} from \"../helpers/paths\";\r\nimport Login from \"../pages/Login\";\r\nimport {requests} from \"../helpers/requests\";\r\nimport {useHttp} from \"./useHttp\";\r\nimport {WaitingPage} from \"../pages/WaitingPage\";\r\nimport {UserContext} from \"../store/UserProvider\";\r\nimport {UserResponseInterface} from \"../interfaces/UserInterface\";\r\nimport HomeSnowblowerPage from \"../pages/HomeSnowblowerPage\";\r\nimport HomeFieldEngineerPage from \"../pages/HomeFieldEngineerPage\";\r\n\r\nexport const useRoutes = () => {\r\n    const user = useContext(UserContext)\r\n    const {request, loading, clearError} = useHttp()\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem('user')\r\n        request(requests.login.url, requests.login.method, null, token)\r\n            .then(data => {\r\n                console.log(data)\r\n                user.login(data as UserResponseInterface, token? token : '', true)\r\n            })\r\n            .catch( () => {\r\n                user.resetUser()\r\n                clearError()\r\n            })\r\n    },[])\r\n\r\n    return useObserver(() => (\r\n        <Switch>\r\n            {loading?\r\n                    <>\r\n                        <Route exact path={routes.toWaitingPage}>\r\n                            <WaitingPage/>\r\n                        </Route>\r\n                        <Redirect to={routes.toWaitingPage}/>\r\n                    </>:\r\n            <>\r\n                {user.user.isAuth ? <>\r\n                    <Route exact path={routes.toHomeSnowblower}>\r\n                        <HomeSnowblowerPage/>\r\n                    </Route>\r\n                    <Route exact path={routes.toHomeFieldEngineer}>\r\n                        <HomeFieldEngineerPage/>\r\n                    </Route>\r\n                    <Redirect to={routes.toHomeSnowblower}/>\r\n                </>:<>\r\n                    <Route exact path={routes.toLogin}>\r\n                        <Login/>\r\n                    </Route>\r\n                    <Redirect to={routes.toLogin}/>\r\n                </>}\r\n            </>}\r\n        </Switch>\r\n    ))\r\n}\r\n","import React from 'react';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { HashRouter as Router } from \"react-router-dom\"\nimport {useRoutes} from \"./hooks/useRoutes\";\nimport {createMuiTheme} from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#499be7',\n        },\n        secondary: {\n            main: '#e57373',\n        },\n        success:{\n            main:'#4791db'\n        }\n    },\n});\n\nfunction App() {\n    let routes = useRoutes()\n\n    return (\n        <ThemeProvider theme={theme}>\n            <Router>\n                {routes}\n            </Router>\n        </ThemeProvider>\n    );\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {UserProvider} from \"./store/UserProvider\";\nimport UserMob from \"./store/UserMob\";\n\nconst user = new UserMob(null)\n\nReactDOM.render(\n    <UserProvider value={user}>\n        <React.StrictMode>\n            <App />\n        </React.StrictMode>\n    </UserProvider>,\n    document.getElementById('root')\n);\n","import {action, observable} from \"mobx\";\r\nimport {UserInterface, UserResponseInterface} from \"../interfaces/UserInterface\";\r\n\r\nclass UserMob {\r\n    @observable user : UserInterface = {\r\n        id: -1,\r\n        token:'',\r\n        name:'',\r\n        surname:'',\r\n        patronymic:'',\r\n        isAuth: false\r\n    }\r\n\r\n    constructor(user: UserResponseInterface | null) {\r\n        if(user) {\r\n            this.user = {\r\n                id: user.id,\r\n                token: '',\r\n                name:user.name,\r\n                surname:user.surname,\r\n                patronymic:user.patronymic,\r\n                isAuth: true\r\n            }\r\n        } else {\r\n            this.user = {\r\n                id: -1,\r\n                token:'',\r\n                name:'',\r\n                surname:'',\r\n                patronymic:'',\r\n                isAuth: false\r\n            }\r\n        }\r\n    }\r\n\r\n    @action\r\n    login = (user: UserResponseInterface, token: string, save: boolean) => {\r\n        this.user = {\r\n            id: user.id,\r\n            token: token,\r\n            name: user.name,\r\n            surname: user.surname,\r\n            patronymic: user.patronymic,\r\n            isAuth: true\r\n        }\r\n        if (save) localStorage.setItem('user', token)\r\n    }\r\n\r\n    @action\r\n    resetUser = () => {\r\n        this.user = {\r\n            id: -1,\r\n            token:'',\r\n            name:'',\r\n            surname:'',\r\n            patronymic:'',\r\n            isAuth: false\r\n        }\r\n        localStorage.clear()\r\n    }\r\n}\r\nexport default UserMob\r\n"],"sourceRoot":""}